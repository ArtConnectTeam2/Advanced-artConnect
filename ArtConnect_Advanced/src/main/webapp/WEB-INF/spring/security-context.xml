<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


	<bean id="customAccessDenied"
		class="com.multi.artConnect.security.CustomAccessDeniedHandler"></bean>
	<bean id="customLoginSuccess"
		class="com.multi.artConnect.security.CustomLoginSuccessHandler"></bean>

	<!-- bcrypt 암호화를 빈으로 지정 -->
	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	<bean id="customUserDetailsService"
		class="com.multi.artConnect.security.CustomUserDetailsService"></bean>

	<!-- CSRF 무시 대상 URL 설정 -->
	<bean id="csrfRequestMatcher"
		class="org.springframework.security.web.util.matcher.RegexRequestMatcher">
		<constructor-arg name="pattern"
			value="/admin/emailAuth" />
		<constructor-arg name="httpMethod" value="POST" />
	</bean>

	<security:http>

		<!-- 접근제한 설정 -->
		<security:intercept-url pattern="/login"
			access="permitAll" />

		<security:intercept-url
			pattern="/mypage/mypage.jsp" access="hasRole('ROLE_MEMBER')" />

		<security:intercept-url pattern="/admin/**"
			access="hasRole('ROLE_ADMIN')" />

		<security:access-denied-handler
			ref="customAccessDenied" />
			
		<!-- 특정 URL 패턴에 대한 CSRF 무시 -->
        <security:csrf request-matcher-ref="csrfRequestMatcher"/>

		<!-- <security:form-login/> -->
		<security:form-login
			login-page="/member/customLogin" login-processing-url="/login"
			username-parameter="memberID" password-parameter="memberPW"
			authentication-success-handler-ref="customLoginSuccess" />


		<!-- 자동 로그인 -->
		<security:remember-me
			data-source-ref="dataSource" token-validity-seconds="604800" />

		<security:logout logout-url="/customLogout"
			invalidate-session="true" delete-cookies="remember-me, JSESSION_ID" />

		<!-- 중복 로그인 설정 -->
		<!-- <security:session-management> <security:concurrency-control max-sessions="1" 
			expired-url="/login_duplicate" /> 중복 로그인 발생시 먼저 로그인한 세션이 끊어지게됨 </security:session-management> -->

	</security:http>

	<!-- 인증과 권한에 대한 실제 처리 -->
	<security:authentication-manager>

		<security:authentication-provider
			user-service-ref="customUserDetailsService">


			<security:password-encoder
				ref="bcryptPasswordEncoder" />

		</security:authentication-provider>

	</security:authentication-manager>


</beans>
